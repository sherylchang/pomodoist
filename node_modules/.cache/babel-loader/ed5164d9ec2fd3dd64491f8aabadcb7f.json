{"ast":null,"code":"import _classCallCheck from \"/Users/SherylChang/Documents/react-decal/pomodoist-lab-part-2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/SherylChang/Documents/react-decal/pomodoist-lab-part-2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/SherylChang/Documents/react-decal/pomodoist-lab-part-2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/SherylChang/Documents/react-decal/pomodoist-lab-part-2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/SherylChang/Documents/react-decal/pomodoist-lab-part-2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/SherylChang/Documents/react-decal/pomodoist-lab-part-2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/SherylChang/Documents/react-decal/pomodoist-lab-part-2/src/App.jsx\";\nimport React from 'react';\nimport Timer from './components/Timer';\nimport TodoItem from './components/TodoItem';\nimport TodoInput from './components/TodoInput';\nimport ClearButton from './components/ClearButton';\nimport EmptyState from './components/EmptyState';\nimport './styles/App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.addItem = _this.addItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearCompletedItems = _this.clearCompletedItems.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.startSession = _this.startSession.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.increaseSessionsCompleted = _this.increaseSessionsCompleted.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleItemIsCompleted = _this.toggleItemIsCompleted.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      // TODO 1\n      items: [],\n      nextItemId: 0,\n      sessionIsRunning: false,\n      itemIdRunning: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addItem\",\n    value: function addItem(description) {\n      var nextItemId = this.state.nextItemId;\n      var newItem = {\n        // TODO 2: initialize new item object\n        id: nextItemId,\n        description: description,\n        sessionsCompleted: 0,\n        isCompleted: false\n      };\n      this.setState(function (prevState) {\n        return {\n          // TODO 2: append new items to list and increase nextItemId by 1\n          items: prevState.items.concat(newItem),\n          nextItemId: prevState.nextItemId + 1\n        };\n      });\n    }\n  }, {\n    key: \"clearCompletedItems\",\n    value: function clearCompletedItems() {// TODO 6\n    }\n  }, {\n    key: \"increaseSessionsCompleted\",\n    value: function increaseSessionsCompleted(itemId) {\n      // TODO 5\n      var copyList;\n      copyList = this.state.items;\n      var i;\n\n      for (i = 0; i < copyList.length; i++) {\n        if (i.id === itemId) {\n          i.sessionsCompleted += 1;\n        }\n      }\n\n      this.setState({\n        items: copyList\n      });\n    }\n  }, {\n    key: \"toggleItemIsCompleted\",\n    value: function toggleItemIsCompleted(itemId) {// TODO 6\n    }\n  }, {\n    key: \"startSession\",\n    value: function startSession(id) {\n      this.setState({\n        sessionIsRunning: true,\n        itemIdRunning: id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          items = _this$state.items,\n          sessionIsRunning = _this$state.sessionIsRunning,\n          itemIdRunning = _this$state.itemIdRunning,\n          areItemsMarkedAsCompleted = _this$state.areItemsMarkedAsCompleted;\n      return React.createElement(\"div\", {\n        className: \"flex-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Today\"), React.createElement(ClearButton, {\n        onClick: this.clearCompletedItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), sessionIsRunning === true && React.createElement(Timer, {\n        mode: \"WORK\",\n        onSessionComplete: function onSessionComplete() {\n          return _this2.increaseSessionsCompleted(itemIdRunning);\n        },\n        autoPlays: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"items-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      },\n      /* TODO 3:  display todo items */\n      items.map(function (item) {\n        return React.createElement(TodoItem, {\n          description: item.description,\n          sessionsCompleted: 0,\n          isCompleted: false,\n          startSession: function startSession() {\n            return _this2.startSession(item.id);\n          },\n          toggleItemIsCompleted: true,\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }))), React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(TodoInput, {\n        addItem: this.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/SherylChang/Documents/react-decal/pomodoist-lab-part-2/src/App.jsx"],"names":["React","Timer","TodoItem","TodoInput","ClearButton","EmptyState","App","props","addItem","bind","clearCompletedItems","startSession","increaseSessionsCompleted","toggleItemIsCompleted","state","items","nextItemId","sessionIsRunning","itemIdRunning","description","newItem","id","sessionsCompleted","isCompleted","setState","prevState","concat","itemId","copyList","i","length","areItemsMarkedAsCompleted","map","item","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Timer from './components/Timer';\nimport TodoItem from './components/TodoItem';\nimport TodoInput from './components/TodoInput';\nimport ClearButton from './components/ClearButton';\nimport EmptyState from './components/EmptyState';\n\nimport './styles/App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addItem = this.addItem.bind(this);\n    this.clearCompletedItems = this.clearCompletedItems.bind(this);\n    this.startSession = this.startSession.bind(this);\n    this.increaseSessionsCompleted = this.increaseSessionsCompleted.bind(this);\n    this.toggleItemIsCompleted = this.toggleItemIsCompleted.bind(this);\n\n    this.state = {\n      // TODO 1\n      items: [],\n      nextItemId: 0,\n      sessionIsRunning: false,\n      itemIdRunning: null,\n    };\n  }\n\n  addItem(description) {\n    const { nextItemId } = this.state;\n    const newItem = {\n      // TODO 2: initialize new item object\n      id: nextItemId,\n      description: description,\n      sessionsCompleted: 0,\n      isCompleted: false,\n    };\n    this.setState((prevState => ({\n      // TODO 2: append new items to list and increase nextItemId by 1\n      items: prevState.items.concat(newItem),\n      nextItemId: prevState.nextItemId + 1, \n    })));\n  }\n\n  clearCompletedItems() {\n    // TODO 6\n  }\n\n  increaseSessionsCompleted(itemId) {\n    // TODO 5\n    let copyList;\n    copyList = this.state.items;\n    let i;\n    for (i = 0; i < copyList.length; i++) { \n      if (i.id === itemId) {\n        i.sessionsCompleted += 1;\n      }\n    }\n    this.setState({\n      items: copyList,\n    })  \n  }\n\n  toggleItemIsCompleted(itemId) {\n    // TODO 6\n  }\n\n  startSession(id) {\n    this.setState({\n      sessionIsRunning: true,\n      itemIdRunning: id, \n    });\n  }\n\n  render() {\n    const {\n      items,\n      sessionIsRunning,\n      itemIdRunning,\n      areItemsMarkedAsCompleted,\n    } = this.state;\n    return (\n      <div className=\"flex-wrapper\">\n        <div className=\"container\">\n          <header>\n            <h1 className=\"heading\">Today</h1>\n            <ClearButton onClick={this.clearCompletedItems} />\n          </header>\n          {/* TODO 4 */}\n          { (sessionIsRunning === true) && <Timer\n              mode=\"WORK\"\n              onSessionComplete={() => this.increaseSessionsCompleted(itemIdRunning)}\n              autoPlays\n            /> }\n            <div className=\"items-container\">\n            {/* TODO 3:  display todo items */\n              items.map((item) => (\n                <TodoItem \n                  description={item.description} \n                  sessionsCompleted={0}\n                  isCompleted={false}\n                  startSession={() => this.startSession(item.id)}\n                  toggleItemIsCompleted\n                  key={item.id}\n                />\n              ))\n            }\n            </div>\n        </div>\n        <footer>\n          <TodoInput addItem={this.addItem} />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}